name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: didkit

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout DIDKit repository
      uses: actions/checkout@v2
      with:
        path: didkit

    - name: Checkout SSI library
      uses: actions/checkout@v2
      with:
        repository: spruceid/ssi
        path: ssi
        ref: e42c4eb98e392d8ad7070e01e2bf01bcdd3ea777

    - name: Cache Cargo registry and build artifacts
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml', 'lib/Makefile', '**.rs') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose

    - name: Test CLI
      run: cli/tests/example.sh

    - name: Test HTTP server
      run: http/tests/example.sh

    - name: Test CLI (did:tz)
      env:
        DID_METHOD: tz
      run: cli/tests/example.sh

    - name: Test HTTP server (did:tz)
      env:
        DID_METHOD: tz
      run: http/tests/example.sh

    - name: Checkout vc-http-api v0.0.1
      uses: actions/checkout@v2
      with:
        repository: spruceid/vc-http-api
        path: vc-http-api
        ref: eef5ef2bb2321e4eac3f7e82a2adb7ccd4db1982

    - name: Run vc-http-api test suite
      working-directory: vc-http-api/packages/plugfest-2020
      run: |
        npm i
        ./vendors/spruce/test.sh

    - name: Checkout vc-http-api v0.0.2
      uses: actions/checkout@v2
      with:
        repository: spruceid/vc-http-api
        path: didkit/http/tests/vc-http-api/vc-http-api
        ref: df9d1bf9540771d114f5b4c4348777378a3f0447

    - name: Run vc-http-api v0.0.2 test suite
      working-directory: didkit/http/tests/vc-http-api
      run: |
        npm install
        npm test

    - name: Install Rust Android targets
      run: make -C lib install-rustup-android

    - name: Install wasm-pack
      run: make -C lib install-wasm-pack

    - name: Install JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: 'dev'

    - name: Opt out of Dart/Flutter analytics
      run: |
        dart --disable-analytics
        flutter --suppress-analytics config --no-analytics

    - name: Test C FFI
      run: make -C lib ../target/test/c.stamp

    - name: Test Node.js package
      run: make -C lib ../target/test/node.stamp

    - name: Test WASM package
      run: make -C lib ../target/test/wasm.stamp 

    - name: Test JNI
      run: make -C lib ../target/test/java.stamp

    - name: Test Dart/Flutter plugin
      run: make -C lib ../target/test/flutter.stamp

    - name: Build Android Archive
      run: make -C lib ../target/test/aar.stamp

    - name: Test Python Package
      run: make -C lib ../target/test/python.stamp
