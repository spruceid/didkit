[package]
name = "didkit"
version = "0.4.0"
authors = ["Spruce Systems, Inc."]
edition = "2018"
description = "Library for Verifiable Credentials and Decentralized Identifiers."
license = "Apache-2.0"
license-file = "LICENSE"
homepage = "https://spruceid.dev/docs/didkit/"
repository = "https://github.com/spruceid/didkit/"
documentation = "https://docs.rs/didkit/"
keywords = ["ssi", "did"]
readme = "README.md"

include = [
  "/src",
  "/README.md",
  "/LICENSE"
]

[features]
default = ["w3c", "eip"]

w3c = ["ssi/w3c", "secp256k1", "secp256r1", "ed25519", "rsa"]
secp256k1 = ["ssi/secp256k1", "did-tz/secp256k1", "did-method-key/secp256k1", "did-ion/secp256k1"]
secp256r1 = ["ssi/secp256r1", "did-tz/secp256r1", "did-webkey/secp256r1", "did-method-key/secp256r1", "did-ion/secp256r1"]
ed25519 = ["ssi/ed25519", "did-tz/ed25519", "did-ion/ed25519"]
rsa = ["ssi/rsa", "did-ion/rsa"]

aleo = ["ssi/aleo"]
eip = ["ssi/eip"]
tezos = ["ssi/tezos"]
solana = ["ssi/solana"]

http-did = ["ssi/http-did"]

wasm = []
ring = ["ssi/ring"]
openssl = ["ssi/openssl"]

[dependencies]
ssi = { version = "0.4", path = "../../ssi", default-features = false }
did-method-key = { version = "^0.1.2", path = "../../ssi/did-key", default-features = false }
did-tz = { version = "^0.1.1", path = "../../ssi/did-tezos", default-features = false }
did-ethr = { version = "0.1", path = "../../ssi/did-ethr", default-features = false }
did-pkh = { version = "0.1", path = "../../ssi/did-pkh", default-features = false }
#did-sol = { version = "0.0.1", path = "../../ssi/did-sol" }
did-web = { version = "^0.1.1", path = "../../ssi/did-web", default-features = false }
did-webkey = { version = "0.1", path = "../../ssi/did-webkey", default-features = false }
did-onion = { version = "^0.1.1", path = "../../ssi/did-onion", default-features = false }
did-ion = { version = "^0.1.0", path = "../../ssi/did-ion", default-features = false }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# TODO feature-gate JNI, or extract it in another crate like we do for Python (and probably WASM as well)
jni = "0.17"
lazy_static = "1.4"
thiserror = "1.0"
base64 = "0.12"
sshkeys = "0.3"
bytes = "1.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.0", features = ["rt-multi-thread"] }

[lib]
crate-type = ["lib", "staticlib", "cdylib"]
